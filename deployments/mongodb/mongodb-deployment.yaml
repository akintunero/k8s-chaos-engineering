apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-mongodb
  namespace: litmus
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/instance: chaos
    app.kubernetes.io/name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: chaos
      app.kubernetes.io/name: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/component: mongodb
        app.kubernetes.io/instance: chaos
        app.kubernetes.io/name: mongodb
    spec:
      serviceAccountName: chaos-mongodb
      containers:
      - name: mongodb
        image: mongo:4.4
        args: ["--auth"]
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: chaos-mongodb
              key: mongodb-root-password
        livenessProbe:
          exec:
            command:
            - mongo
            - --quiet
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 20
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongo
            - --quiet
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 20
          failureThreshold: 3
        volumeMounts:
        - name: datadir
          mountPath: /data/db
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: mongodb-pvc 