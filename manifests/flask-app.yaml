apiVersion: v1
kind: Namespace
metadata:
  name: hello-world-app
  labels:
    name: hello-world-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: hello-world-app
  labels:
    app: flask-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: nginx:alpine
        ports:
        - containerPort: 80
        env:
        - name: NGINX_PORT
          value: "80"
        volumeMounts:
        - name: app-code
          mountPath: /usr/share/nginx/html
      volumes:
      - name: app-code
        configMap:
          name: flask-app-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-app-config
  namespace: hello-world-app
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Chaos Engineering Test App</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .status { padding: 10px; margin: 10px 0; border-radius: 5px; }
            .healthy { background-color: #d4edda; color: #155724; }
            .pod-info { background-color: #f8f9fa; padding: 10px; border-radius: 5px; }
        </style>
    </head>
    <body>
        <h1>ðŸŽ¯ Chaos Engineering Test Application</h1>
        <div class="status healthy">âœ… Application is running and healthy</div>
        <div class="pod-info">
            <h3>Pod Information:</h3>
            <p><strong>Pod Name:</strong> <span id="pod-name">Loading...</span></p>
            <p><strong>Timestamp:</strong> <span id="timestamp">Loading...</span></p>
        </div>
        <script>
            document.getElementById('timestamp').textContent = new Date().toISOString();
            // Pod name will be set by the server
        </script>
    </body>
    </html>
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: hello-world-app
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP 